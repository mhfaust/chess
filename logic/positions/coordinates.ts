import { PositionName }  from 'logic/positions/positionName';

type RankIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
type FileIndex =  0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;

const { freeze } = Object;

const COORDS: Record<PositionName, readonly [FileIndex, RankIndex]> = {
    a1: freeze([0, 0]),
    a2: freeze([0, 1]),
    a3: freeze([0, 2]),
    a4: freeze([0, 3]),
    a5: freeze([0, 4]),
    a6: freeze([0, 5]),
    a7: freeze([0, 6]),
    a8: freeze([0, 7]),
    b1: freeze([1, 0]),
    b2: freeze([1, 1]),
    b3: freeze([1, 2]),
    b4: freeze([1, 3]),
    b5: freeze([1, 4]),
    b6: freeze([1, 5]),
    b7: freeze([1, 6]),
    b8: freeze([1, 7]),
    c1: freeze([2, 0]),
    c2: freeze([2, 1]),
    c3: freeze([2, 2]),
    c4: freeze([2, 3]),
    c5: freeze([2, 4]),
    c6: freeze([2, 5]),
    c7: freeze([2, 6]),
    c8: freeze([2, 7]),
    d1: freeze([3, 0]),
    d2: freeze([3, 1]),
    d3: freeze([3, 2]),
    d4: freeze([3, 3]),
    d5: freeze([3, 4]),
    d6: freeze([3, 5]),
    d7: freeze([3, 6]),
    d8: freeze([3, 7]),
    e1: freeze([4, 0]),
    e2: freeze([4, 1]),
    e3: freeze([4, 2]),
    e4: freeze([4, 3]),
    e5: freeze([4, 4]),
    e6: freeze([4, 5]),
    e7: freeze([4, 6]),
    e8: freeze([4, 7]),
    f1: freeze([5, 0]),
    f2: freeze([5, 1]),
    f3: freeze([5, 2]),
    f4: freeze([5, 3]),
    f5: freeze([5, 4]),
    f6: freeze([5, 5]),
    f7: freeze([5, 6]),
    f8: freeze([5, 7]),
    g1: freeze([6, 0]),
    g2: freeze([6, 1]),
    g3: freeze([6, 2]),
    g4: freeze([6, 3]),
    g5: freeze([6, 4]),
    g6: freeze([6, 5]),
    g7: freeze([6, 6]),
    g8: freeze([6, 7]),
    h1: freeze([7, 0]),
    h2: freeze([7, 1]),
    h3: freeze([7, 2]),
    h4: freeze([7, 3]),
    h5: freeze([7, 4]),
    h6: freeze([7, 5]),
    h7: freeze([7, 6]),
    h8: freeze([7, 7])
};

export default COORDS;